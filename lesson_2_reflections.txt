What happens when you initialize a repository? Why do you need to do it?
Empty git repository is created with name '.git'. We need this to save the commits i.e. to save all committed versions of the project.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
Staging area stores changes made in working directory but are not committed yet. So if we undo the changes manually in working directory , it still posses the version of file with previous changes on temporary basis.

How can you use the staging area to make sure you have one commit per logical
change?
I will use staging area to store all files which are logically related to make single commit for them when I get all logically related changes.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
We can try out various versions of project and save them as history using branching at specific stage of our working tree which we actually don't want to share with users.

How do the diagrams help you visualize the branch structure?
Diagrams helps to trace back the branches we made manually.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
After merging two branches together, we get all the commits in both branches in final result which are sorted by their timestamp. It will be east to trace the paths by drawing the same in our diagrams as well.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
Automatic Merging: 
	Pros: We don't need to give merge command again and again	
	Cons: Less control over working tree
Manual Merging:
	Pros: Better control over working tree
	Cons: We have to give merge command wherever needed on proper time without forgetting
	